<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<!-- 扫描注解 过滤掉Service和Repository，只扫描Controller -->
    <context:component-scan base-package="com.kkcvs" >
    	<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>

	<!--配置静态资源-->
    <mvc:resources location="/static/js/" mapping="/js/**"/>
    <mvc:resources location="/static/img/" mapping="/img/**"/>
    <mvc:resources location="/static/css/" mapping="/css/**"/>

	<!--配置SpringMVC注解对应的内容-->
	<!--这个是RequestMappingHandlerMapping拦截器，对应即为Controller前面的@RequestMapping注解-->
	<!--HandlerMapping 作用如下：
        SpringMVC工作过程中，DispatcherServlet收到请求之后会把请求交给HandlerMapping，
        HandlerMapping根据配置（此处为注解）找到请求对应的Handler-->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>

	<!--这个是RequestMappingHandlerAdapter-->
	<!--HandlerAdapter 作用如下：
        SpringMVC工作过程中，HandlerMapping找到Handler，Handler对具体的处理（Controller）进行封装，
        然后由HandlerAdapter对Handler进行具体处理
        在这里我们定义了返回对象自动转换为Json数据-->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="cacheSeconds" value="0"/>
		<property name="messageConverters">
			<list>
				<ref bean="mappingJackson2HttpMessageConverter"/>
				<ref bean="mappingStringHttpMessageConverter"/>
			</list>
		</property>
		<property name="webBindingInitializer" ref="webBindingInitializer">
		</property>
	</bean>

	<!--设置文件上传的bean，如果项目中不需要上传文件可以去掉-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10485760" />
	</bean>

	<!--这里就是Spring对http消息格式转换提供的接口-->
	<bean id="mappingStringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!--同上-->
	<bean id="mappingJackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<bean class="org.springframework.http.MediaType">
					<constructor-arg index="0" value="application"/>
					<constructor-arg index="1" value="json"/>
					<constructor-arg index="2" value="UTF-8"/>
				</bean>
			</list>
		</property>
	</bean>

	<!--注册转换器到SpringMVC ，并注册在了上面的RequestMappingHandlerAdapter中-->
	<bean id="webBindingInitializer" class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
		<property name="conversionService">
			<bean class="org.springframework.core.convert.support.DefaultConversionService"></bean>
		</property>
	</bean>

	<!-- 添加viewResolver -->
	<!--viewResolver的作用是接收到返回的ModelAndView的时候把它处理成视图（jsp文件）-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">  
        <property name="viewResolvers">
        	<list>
        		<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        			<property name="order" value="2"/>
        			<property name="prefix" value="/WEB-INF/views/" />  
       				<property name="suffix" value=".jsp" /> 
        		</bean>
        	</list>
        </property>
         
    </bean>  
</beans> 